{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/API_KEY.js","components/GIfGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","id","title","images","img","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMA+BeA,EA5BK,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAKlB,SACI,uBAAOO,KAAK,OAAOC,YAAY,sBAAmBC,MAAOV,EAAYW,SAdnD,SAACR,GACvBF,EAAcE,EAAES,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,oBCFA,mCDEA,sBAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,YAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,OACnC,MAAM,CACFF,GAAIA,EACJC,MAAOA,EACPE,IAAG,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAQE,iBAAiBZ,QARf,kBAWZM,GAXY,4CAAH,sDEULO,EAXK,SAAC,GAAoB,EAAnBL,GAAoB,IAAhBC,EAAe,EAAfA,MAAOE,EAAQ,EAARA,IAE7B,OACI,sBAAKG,UAAU,yCAAf,UACI,qBAAKC,IAAKJ,EAAKK,IAAKP,IACpB,4BAAIA,QCYDQ,EAfC,SAAC,GAAe,IAAdnB,EAAa,EAAbA,SAEd,ECFwB,SAACA,GACzB,MAAyBf,mBAAS,CAC9BsB,KAAK,GACLa,SAAS,IAFb,mBAAMC,EAAN,KAAaC,EAAb,KAYA,OAPAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACpCf,KAAMkB,EACNL,SAAS,SAEd,CAACpB,IAEGqB,EDXwBK,CAAa1B,GAAhCY,EAAZ,EAAOL,KAAaa,EAApB,EAAoBA,QAEpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,UAAf,SACKJ,EAAOH,KAAK,SAAAI,GAAG,OAAI,cAAC,EAAD,eAA8BA,GAAZA,EAAIH,aEW3CiB,EAnBM,WAEjB,MAAoC1C,mBAAS,CAAC,WAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KACA,OACI,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ4C,EAAWnB,KAAI,SAAAT,GAAQ,OAAI,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCRzD6B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4e2b8564.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) =>{\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue,...cats])\r\n            setInputValue('');\r\n        }\r\n    }   \r\n\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" placeholder=\"AÃ±adir Categoria\" value={inputValue} onChange={ handleInputChange}/>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","import { API_KEY } from '../components/API_KEY';\r\n\r\nexport const getGifs = async (category) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=${API_KEY}&limit=10`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(({id, title, images}) =>{\r\n    return{\r\n        id: id,\r\n        title: title,\r\n        img: images?.downsized_medium.url\r\n    }\r\n    });\r\n    return gifs;\r\n}","export const API_KEY = 'SIYipHL29ry2Pv2JSvYbhljq7bk3phHX'","import React from 'react';\r\nconst GifGridItem = ({id, title, img}) =>{\r\n\r\n    return(\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={img} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default GifGridItem;","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GIfGridItem';\r\nconst GifGrid = ({category}) =>{\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return(\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            <div className=\"content\">\r\n                {images.map( img => <GifGridItem key={img.id} {...img} />)}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifGrid;","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) =>{\r\n    const[state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifs(category).then(imgs => setState({\r\n            data: imgs,\r\n            loading: false\r\n        }));\r\n    }, [category]);\r\n\r\n    return state;\r\n}","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n    const [categories, setCategories] = useState(['Batman']);\r\n    return(\r\n        <>\r\n        <h1>GifExpertApp</h1>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr></hr>\r\n        \r\n        <ol>\r\n            {\r\n                categories.map(category => <GifGrid key={category} category={category}/>)\r\n            }\r\n        </ol>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}